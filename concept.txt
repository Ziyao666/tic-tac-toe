React:
React is a declarative, efficient, and flexible JavaScript library 
for building user interfaces.

Component:
A component takes in parameters, called props (short for “properties”), 
and returns a hierarchy of views to display via the render method.

Passing props is how information flows in React apps, from parents to children.

React components can have state by setting this.state in their constructors. 
this.state should be considered as private to a React component that 
it’s defined in.

All React component classes that have a constructor should start with a 
super(props) call.

Key:
key is a special and reserved property in React (along with ref, a more 
advanced feature). When an element is created, React extracts the key 
property and stores the key directly on the returned element. Even though 
key may look like it belongs in props, key cannot be referenced using 
this.props.key. React automatically uses key to decide which components to 
update. A component cannot inquire about its key.
Keys do not need to be globally unique; they only need to be unique between 
components and their siblings.


